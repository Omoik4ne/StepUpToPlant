/*
Deployment script for StepUpToPlantDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "StepUpToPlantDB"
:setvar DefaultFilePrefix "StepUpToPlantDB"
:setvar DefaultDataPath "C:\Users\sunsh\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\sunsh\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [IdAddress]   INT           IDENTITY (1, 1) NOT NULL,
    [Number]      VARCHAR (8)   NOT NULL,
    [Street]      VARCHAR (128) NOT NULL,
    [City]        VARCHAR (32)  NOT NULL,
    [Country]     VARCHAR (32)  NOT NULL,
    [Zip]         INT           NULL,
    [Departement] VARCHAR (32)  NULL,
    PRIMARY KEY CLUSTERED ([IdAddress] ASC),
    CONSTRAINT [UK_Address] UNIQUE NONCLUSTERED ([Number] ASC, [Street] ASC, [City] ASC, [Country] ASC, [Zip] ASC)
);


GO
PRINT N'Creating [dbo].[Admin]...';


GO
CREATE TABLE [dbo].[Admin] (
    [IDUser]       INT           NOT NULL,
    [PromotedDate] DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([IDUser] ASC)
);


GO
PRINT N'Creating [dbo].[Cardinal]...';


GO
CREATE TABLE [dbo].[Cardinal] (
    [IdCardinal] INT         IDENTITY (1, 1) NOT NULL,
    [Cardinal]   VARCHAR (5) NULL,
    PRIMARY KEY CLUSTERED ([IdCardinal] ASC)
);


GO
PRINT N'Creating [dbo].[Care]...';


GO
CREATE TABLE [dbo].[Care] (
    [IdCare]     INT            IDENTITY (1, 1) NOT NULL,
    [Type]       VARCHAR (MAX)  NOT NULL,
    [Logo]       NVARCHAR (250) NULL,
    [Fertilizer] VARCHAR (32)   NULL,
    [Rota]       INT            NULL,
    PRIMARY KEY CLUSTERED ([IdCare] ASC)
);


GO
PRINT N'Creating [dbo].[Exposure]...';


GO
CREATE TABLE [dbo].[Exposure] (
    [IdExposure] INT IDENTITY (1, 1) NOT NULL,
    [IdCardinal] INT NOT NULL,
    [IdUser]     INT NOT NULL,
    [IdPlant]    INT NOT NULL,
    PRIMARY KEY CLUSTERED ([IdExposure] ASC)
);


GO
PRINT N'Creating [dbo].[Location]...';


GO
CREATE TABLE [dbo].[Location] (
    [IdLocation] INT          IDENTITY (1, 1) NOT NULL,
    [Size]       VARCHAR (32) NOT NULL,
    [IdPlant]    INT          NULL,
    [IdExposure] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([IdLocation] ASC)
);


GO
PRINT N'Creating [dbo].[Message]...';


GO
CREATE TABLE [dbo].[Message] (
    [IdMessage]   INT            IDENTITY (1, 1) NOT NULL,
    [Nom]         NVARCHAR (50)  NOT NULL,
    [Email]       NVARCHAR (323) NOT NULL,
    [Phone]       NVARCHAR (12)  NOT NULL,
    [Information] NVARCHAR (MAX) NOT NULL,
    [DateEnvoie]  DATETIME       NOT NULL,
    PRIMARY KEY CLUSTERED ([IdMessage] ASC)
);


GO
PRINT N'Creating [dbo].[Plant]...';


GO
CREATE TABLE [dbo].[Plant] (
    [IdPlant]     INT            IDENTITY (1, 1) NOT NULL,
    [ComName]     VARCHAR (64)   NOT NULL,
    [ScienName]   VARCHAR (64)   NOT NULL,
    [Picture]     NVARCHAR (250) NOT NULL,
    [Height]      VARCHAR (32)   NULL,
    [Type]        VARCHAR (32)   NOT NULL,
    [NeedLight]   VARCHAR (32)   NOT NULL,
    [PlantTime]   DATE           NULL,
    [HarvTime]    DATE           NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [FavPlant]    NVARCHAR (MAX) NULL,
    [AvoidPlant]  NVARCHAR (MAX) NULL,
    [IdSpecies]   INT            NOT NULL,
    [IdCare]      INT            NULL,
    [IdExposure]  INT            NOT NULL,
    CONSTRAINT [PK_Plant] PRIMARY KEY CLUSTERED ([IdPlant] ASC),
    CONSTRAINT [UK_Plant_ComName] UNIQUE NONCLUSTERED ([ComName] ASC),
    CONSTRAINT [UK_Plant_Picture] UNIQUE NONCLUSTERED ([Picture] ASC),
    CONSTRAINT [UK_Plant_ScienName] UNIQUE NONCLUSTERED ([ScienName] ASC)
);


GO
PRINT N'Creating [dbo].[Plot]...';


GO
CREATE TABLE [dbo].[Plot] (
    [IdPlot]     INT            IDENTITY (1, 1) NOT NULL,
    [BegPlant]   DATE           NOT NULL,
    [EndPlant]   DATE           NOT NULL,
    [NumPlant]   INT            NOT NULL,
    [Layout]     NVARCHAR (250) NOT NULL,
    [Substrate]  VARCHAR (MAX)  NULL,
    [Equipement] VARCHAR (MAX)  NULL,
    [Status]     BIT            NOT NULL,
    [IdLocation] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([IdPlot] ASC)
);


GO
PRINT N'Creating [dbo].[Replace]...';


GO
CREATE TABLE [dbo].[Replace] (
    [IdReplace]  INT IDENTITY (1, 1) NOT NULL,
    [IdPrePlant] INT NOT NULL,
    [IdFolPlant] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([IdReplace] ASC)
);


GO
PRINT N'Creating [dbo].[Species]...';


GO
CREATE TABLE [dbo].[Species] (
    [IdSpecies] INT           IDENTITY (1, 1) NOT NULL,
    [Name]      NVARCHAR (50) NOT NULL,
    [UsualName] NVARCHAR (50) NOT NULL,
    [Color]     VARCHAR (10)  NOT NULL,
    PRIMARY KEY CLUSTERED ([IdSpecies] ASC),
    CONSTRAINT [UK_Species_Name] UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating [dbo].[Tip]...';


GO
CREATE TABLE [dbo].[Tip] (
    [IdTip]   INT            IDENTITY (1, 1) NOT NULL,
    [Date]    DATETIME2 (7)  NOT NULL,
    [Avatar]  NVARCHAR (250) NULL,
    [Content] NVARCHAR (MAX) NOT NULL,
    [IdUser]  INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([IdTip] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [IdUser]     INT            IDENTITY (1, 1) NOT NULL,
    [Name]       VARCHAR (64)   NOT NULL,
    [LastName]   VARCHAR (64)   NOT NULL,
    [Pseudo]     VARCHAR (16)   NOT NULL,
    [Password]   VARBINARY (32) NOT NULL,
    [Salt]       CHAR (8)       NOT NULL,
    [Avatar]     NVARCHAR (250) NULL,
    [BirthDate]  DATE           NOT NULL,
    [Email]      VARCHAR (256)  NOT NULL,
    [IdAddress]  INT            NOT NULL,
    [IdCardinal] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([IdUser] ASC),
    CONSTRAINT [UK_User_Email] UNIQUE NONCLUSTERED ([Email] ASC),
    CONSTRAINT [UK_User_Login] UNIQUE NONCLUSTERED ([Pseudo] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Admin_User]...';


GO
ALTER TABLE [dbo].[Admin]
    ADD CONSTRAINT [FK_Admin_User] FOREIGN KEY ([IDUser]) REFERENCES [dbo].[User] ([IdUser]);


GO
PRINT N'Creating [dbo].[FK_Exposure_ToCardinal]...';


GO
ALTER TABLE [dbo].[Exposure]
    ADD CONSTRAINT [FK_Exposure_ToCardinal] FOREIGN KEY ([IdCardinal]) REFERENCES [dbo].[Cardinal] ([IdCardinal]);


GO
PRINT N'Creating [dbo].[FK_Exposure_ToUser]...';


GO
ALTER TABLE [dbo].[Exposure]
    ADD CONSTRAINT [FK_Exposure_ToUser] FOREIGN KEY ([IdUser]) REFERENCES [dbo].[User] ([IdUser]);


GO
PRINT N'Creating [dbo].[FK_Exposure_ToPlant]...';


GO
ALTER TABLE [dbo].[Exposure]
    ADD CONSTRAINT [FK_Exposure_ToPlant] FOREIGN KEY ([IdPlant]) REFERENCES [dbo].[Plant] ([IdPlant]);


GO
PRINT N'Creating [dbo].[FK_Location_ToPlant]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToPlant] FOREIGN KEY ([IdPlant]) REFERENCES [dbo].[Plant] ([IdPlant]);


GO
PRINT N'Creating [dbo].[FK_Location_ToExposure]...';


GO
ALTER TABLE [dbo].[Location]
    ADD CONSTRAINT [FK_Location_ToExposure] FOREIGN KEY ([IdExposure]) REFERENCES [dbo].[Exposure] ([IdExposure]);


GO
PRINT N'Creating [dbo].[FK_Plant_ToSpecies]...';


GO
ALTER TABLE [dbo].[Plant]
    ADD CONSTRAINT [FK_Plant_ToSpecies] FOREIGN KEY ([IdSpecies]) REFERENCES [dbo].[Species] ([IdSpecies]);


GO
PRINT N'Creating [dbo].[FK_Plant_ToCare]...';


GO
ALTER TABLE [dbo].[Plant]
    ADD CONSTRAINT [FK_Plant_ToCare] FOREIGN KEY ([IdCare]) REFERENCES [dbo].[Care] ([IdCare]);


GO
PRINT N'Creating [dbo].[FK_Plant_ToExposure]...';


GO
ALTER TABLE [dbo].[Plant]
    ADD CONSTRAINT [FK_Plant_ToExposure] FOREIGN KEY ([IdExposure]) REFERENCES [dbo].[Exposure] ([IdExposure]);


GO
PRINT N'Creating [dbo].[FK_Plot_ToLocation]...';


GO
ALTER TABLE [dbo].[Plot]
    ADD CONSTRAINT [FK_Plot_ToLocation] FOREIGN KEY ([IdLocation]) REFERENCES [dbo].[Location] ([IdLocation]);


GO
PRINT N'Creating [dbo].[FK_User_Address]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_Address] FOREIGN KEY ([IdAddress]) REFERENCES [dbo].[Address] ([IdAddress]);


GO
PRINT N'Creating [dbo].[CK_User_Email]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [CK_User_Email] CHECK ([Email] LIKE '___%@___%.__%');


GO
PRINT N'Creating [dbo].[CK_User_BirthDate]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [CK_User_BirthDate] CHECK (DATEDIFF(YEAR,[BirthDate],GETDATE()) > 5 AND DATEDIFF(YEAR,[BirthDate],GETDATE()) < 150);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2367e167-15e8-4d60-b5c8-5d481b7ad40d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2367e167-15e8-4d60-b5c8-5d481b7ad40d')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
